% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/w3css_input.R
\name{w3_radioButton}
\alias{w3_radioButton}
\alias{w3_selectInput}
\alias{w3_updateSelectInput}
\alias{w3_textInput}
\alias{w3_passwordInput}
\alias{w3_dateInput}
\alias{w3_editableListInput}
\alias{w3_numericInput}
\alias{w3_updateNumericInput}
\alias{w3_checkbox}
\alias{w3_checkboxGroupInput}
\title{W3.CSS Input}
\usage{
w3_radioButton(inputId, label, choices, choiceNames = NULL)

w3_selectInput(inputId, label, choices, selected = NULL)

w3_updateSelectInput(
  inputId,
  label = NULL,
  choices = NULL,
  session = shiny::getDefaultReactiveDomain()
)

w3_textInput(inputId, label, placeholder = "")

w3_passwordInput(inputId, label, placeholder = "")

w3_dateInput(inputId, label, value = Sys.Date(), min = "", max = "")

w3_editableListInput(inputId, label, choices, ul_class = "", li_class = "")

w3_numericInput(
  inputId,
  label,
  value = NULL,
  min,
  max,
  step = NULL,
  placeholder = ""
)

w3_updateNumericInput(
  inputId,
  label = NULL,
  placeholder = NULL,
  value = NULL,
  min = NULL,
  max = NULL,
  step = NULL,
  session = shiny::getDefaultReactiveDomain()
)

w3_checkbox(inputId, label, value = FALSE)

w3_checkboxGroupInput(
  inputId,
  label = NULL,
  choices,
  selected = NULL,
  choiceNames = NULL
)
}
\arguments{
\item{inputId}{The \code{input} slot that will be used to access the value.}

\item{label}{Display label for the control, or \code{NULL} for no label.}

\item{choices}{List of values to select from (if elements of the list are
named then that name rather than the value is displayed to the user). If
this argument is provided, then \code{choiceNames} and \code{choiceValues} must not
be provided, and vice-versa. The values should be strings; other types
(such as logicals and numbers) will be coerced to strings.}

\item{choiceNames}{List of names and values, respectively, that are displayed to the user in the app and correspond to the each choice (for this reason, choiceNames and choiceValues must have the same length). If either of these arguments is provided, then the other must be provided and choices must not be provided. The advantage of using both of these over a named list for choices is that choiceNames allows any type of UI object to be passed through (tag objects, icons, HTML code, ...), instead of just simple text. See Examples.}

\item{selected}{The initially selected value. If not specified, then it
defaults to the first item in \code{choices}. To start with no items selected,
use \code{character(0)}.}

\item{session}{The \code{session} object passed to function given to
\code{shinyServer}. Default is \code{getDefaultReactiveDomain()}.}

\item{placeholder}{A character string giving the user a hint as to what can
be entered into the control. Internet Explorer 8 and 9 do not support this
option.}

\item{value}{Initial value.}

\item{min}{The minimum allowed date. Either a Date object, or a string in
\code{yyyy-mm-dd} format.}

\item{max}{The maximum allowed date. Either a Date object, or a string in
\code{yyyy-mm-dd} format.}

\item{ul_class, li_class}{CSS class for the internal elements.}

\item{step}{Interval to use when stepping between min and max}
}
\value{
Input UI elements
}
\description{
Implementation of W3.CSS Input, as described in
\url{https://www.w3schools.com/w3css/w3css_input.asp}
}
\examples{

w3_actionButton(
  "w3_actionButton",
  "Show Modal"
)
}
